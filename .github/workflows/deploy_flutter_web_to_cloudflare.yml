# This reusable workflow is intended to streamline the deployment of a Flutter web
# application to Cloudflare Pages. To customize the deployment process, you can
# specify the flutter build flags and the deployment environment ('main' for production,
# or any other environment name for preview deployments) as inputs.
name: Deploy Flutter web app to Cloudflare Pages

on:
  workflow_call:
    inputs:
      buildRenderer:
        description: "The renderer to use for the Flutter web build."
        type: string
        required: true
        default: "wasm" # valid options: ['wasm', 'canvaskit']
      deploymentBranch:
        description: |
          Deployment environment name (usually the branch name).
          - Use "main" for production deployments.
          - Use other names for preview deployments with their own URLs.
        type: string
        required: false
        default: "main"

concurrency:
  group: ${{ inputs.deploymentBranch }}-${{ github.workflow }}
  cancel-in-progress: false

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"
          cache: "npm"

      - name: Install project dependencies
        run: npm ci --omit=dev

      - name: Deploy to Cloudflare Pages using Wrangler # It will also build the Flutter web app
        env:
          BUILD_RENDERER: ${{ inputs.buildRenderer }} # Used to build with `html` or `wasm` renderer
          DEPLOY_BRANCH: ${{ inputs.deploymentBranch }} # Used to select the deployment environment
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: npm run deploy
