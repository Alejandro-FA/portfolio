---
import { render, type CollectionEntry } from "astro:content";
import { getRelativeLocaleUrl } from "astro:i18n";
import * as i18n from "../i18n";

import BaseLayout from "../layouts/BaseLayout.astro";

import ContactCTA from "../components/ContactCTA.astro";
import Hero from "../components/Hero.astro";
import Icon from "../components/Icon.astro";
import Pill from "../components/Pill.astro";

interface Props {
  entry: CollectionEntry<"projects">;
}

const locale = i18n.getLocaleFromUrl(Astro.url);
const workUrl = getRelativeLocaleUrl(locale, "/projects/");

const { entry } = Astro.props;
const { Content } = await render(entry);
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
  <div class="stack gap-20">
    <div class="stack gap-15">
      <header>
        <div class="wrapper stack gap-2">
          <div class="wrapper row">
            <a class="back-link row gap-1" href={workUrl}
              ><Icon icon="arrow-left" /> Projects</a
            >
            <a
              class="github-link row gap-2"
              href={entry.data.github}
              target="_blank"
              rel="noopener noreferrer"
              ><Icon viewBox="0 0 512 512" icon="github-logo" /> View on GitHub</a
            >
          </div>
          <Hero title={entry.data.title} align="start">
            <div class="details">
              <div class="tags">
                {entry.data.tags.map((t) => <Pill>{t}</Pill>)}
              </div>
              <p class="description">{entry.data.description}</p>
            </div>
          </Hero>
        </div>
      </header>
      <main class="wrapper">
        <div class="stack gap-10 content">
          {
            entry.data.img && (
              <img src={entry.data.img} alt={entry.data.img_alt || ""} />
            )
          }
          <div class="content">
            <Content />
          </div>
        </div>
      </main>
    </div>
    <ContactCTA />
  </div>
</BaseLayout>

<style>
  header {
    padding-bottom: 2.5rem;
  }

  .back-link,
  .github-link {
    padding: 0.3rem 0.75rem;
    font-weight: bold;
    border-radius: 999rem;
  }

  .back-link {
    background-color: color-mix(
      in srgb,
      var(--md-sys-color-surface-container-low) 30%,
      transparent
    );
  }

  .back-link:hover,
  .back-link:focus {
    background-color: color-mix(
      in srgb,
      var(--md-sys-color-surface-container-low) 50%,
      transparent
    );
  }

  .github-link {
    background-color: var(--md-sys-color-secondary);
    color: var(--md-sys-color-on-secondary);
    margin-left: auto;
    margin-right: auto;
  }

  .github-link:hover,
  .github-link:focus {
    background-color: color-mix(
      in srgb,
      var(--md-sys-color-inverse-surface) 40%,
      var(--md-sys-color-secondary)
    );
  }

  .details {
    display: flex;
    flex-direction: column;
    padding: 0.5rem;
    gap: 1.5rem;
    justify-content: space-between;
    align-items: center;
  }

  .tags {
    display: flex;
    gap: 0.5rem;
  }

  .description {
    font-size: var(--text-lg);
    max-width: 54ch;
  }

  .content {
    max-width: 65ch;
    margin-inline: auto;
    font-size: var(--text-md);
  }

  .content > :global(* + *) {
    margin-top: 1rem;
  }

  .content :global(a) {
    font-weight: bold;
  }

  .content :global(h1),
  .content :global(h2),
  .content :global(h3),
  .content :global(h4),
  .content :global(h5) {
    color: var(--md-sys-color-primary);
    margin: 1.5rem 0;
  }

  .content :global(img) {
    border-radius: 1.5rem;
    box-shadow: var(--shadow-sm);
    background: var(--md-sys-color-surface-container-low);
    border: 1px solid var(--outline-color);
  }

  .content :global(blockquote) {
    font-size: var(--text-lg);
    font-family: var(--font-brand);
    font-weight: 600;
    line-height: 1.1;
    padding-inline-start: 1.5rem;
    border-inline-start: 0.25rem solid var(--md-sys-color-tertiary);
    color: color-mix(
      in srgb,
      var(--md-sys-color-tertiary) 40%,
      var(--md-sys-color-on-surface)
    );
  }

  .content :global(pre) {
    border: 1px solid var(--outline-color);
    border-radius: 0.75rem;
    padding: 0.75rem;
  }

  .content :global(code) {
    font-size: var(--text-sm);
  }

  .back-link,
  .github-link,
  .content :global(a) {
    text-decoration: 1px solid underline transparent;
    text-underline-offset: 0.25em;
    transition: text-decoration-color var(--theme-transition);
  }

  .back-link:hover,
  .back-link:focus,
  .github-link:hover,
  .github-link:focus,
  .content :global(a:hover),
  .content :global(a:focus) {
    text-decoration-color: currentColor;
  }

  @media (max-width: 50em) {
    .back-link {
      display: none;
    }
  }

  @media (min-width: 50em) {
    .github-link {
      margin-right: 0;
    }

    .details {
      flex-direction: row;
      gap: 2.5rem;
    }

    .content :global(blockquote) {
      font-size: var(--text-2xl);
    }

    .content :global(pre) {
      border-radius: 1.5rem;
      padding: 1rem;
    }
  }
</style>
